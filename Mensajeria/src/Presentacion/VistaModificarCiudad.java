package Presentacion;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis García Estrades https://github.com/lgarest
 */
public class VistaModificarCiudad extends javax.swing.JFrame {
    private CtrlPresentacion ctrlp;
    private String ciudad;
    
    /**
     * Creates new form VistaModificarCiudad
     */
    public VistaModificarCiudad() {
        initComponents();
    }
    
    /**
     * Creates new form VistaModificarCiudad
     */
    public VistaModificarCiudad(CtrlPresentacion ctrlp, String nombreCiudad) {
        this.ctrlp = ctrlp;
        this.ciudad = nombreCiudad;
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JButton();
        btnAnadir = new javax.swing.JButton();
        btnRenombrar = new javax.swing.JButton();
        btnDistancia = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnFichero = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar ciudad", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        btnCancelar.setBackground(new java.awt.Color(75, 75, 75));
        btnCancelar.setForeground(new java.awt.Color(220, 220, 220));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAnadir.setBackground(new java.awt.Color(75, 75, 75));
        btnAnadir.setForeground(new java.awt.Color(220, 220, 220));
        btnAnadir.setText("Añadir punto");
        btnAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnadirActionPerformed(evt);
            }
        });

        btnRenombrar.setBackground(new java.awt.Color(75, 75, 75));
        btnRenombrar.setForeground(new java.awt.Color(220, 220, 220));
        btnRenombrar.setText("Renombrar punto");
        btnRenombrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRenombrarActionPerformed(evt);
            }
        });

        btnDistancia.setBackground(new java.awt.Color(75, 75, 75));
        btnDistancia.setForeground(new java.awt.Color(220, 220, 220));
        btnDistancia.setText("Modificar distancia");
        btnDistancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistanciaActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(75, 75, 75));
        btnEliminar.setForeground(new java.awt.Color(220, 220, 220));
        btnEliminar.setText("Eliminar punto");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnFichero.setBackground(new java.awt.Color(75, 75, 75));
        btnFichero.setForeground(new java.awt.Color(220, 220, 220));
        btnFichero.setText("Desde fichero");
        btnFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFicheroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFichero, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDistancia, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRenombrar, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnadir, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAnadir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRenombrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFichero, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAnadir, btnCancelar, btnDistancia, btnEliminar, btnRenombrar});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnRenombrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRenombrarActionPerformed
        String nombre1 = JOptionPane.showInputDialog("Introduce el nombre del punto a renombrar:");
        try {
            if(ctrlp.getNombresCiudad(ciudad).contains(nombre1)){
                String nombre2 = JOptionPane.showInputDialog("Introduce el nuevo nombre:");
                ctrlp.renombrarPunto(nombre1, nombre2);
            }
            else this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnRenombrarActionPerformed

    private void btnDistanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistanciaActionPerformed
        String[] parNombres;
        parNombres = new String[2];
        String nombre1 = JOptionPane.showInputDialog("introduce el primer punto:");
        parNombres[0] = nombre1;
        String nombre2 = JOptionPane.showInputDialog("introduce el segundo punto:");
        parNombres[1] = nombre2;
        for(int i = 0; i < parNombres.length; ++i){
            try {
            if(ctrlp.getNombresCiudad(ciudad).contains(parNombres[i])){
            }
            else this.dispose();
            } catch (IOException ex) {
                Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        String dist = JOptionPane.showInputDialog("introduce la distancia");
        try {
            ctrlp.modificaDistancia(nombre1, nombre2, dist);
        } catch (IOException ex) {
            Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDistanciaActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Eliminar punto
        String nombre1 = JOptionPane.showInputDialog("Introduce el nombre del punto que desea eliminar:");
        try {
            if(ctrlp.getNombresCiudad(ciudad).contains(nombre1)){
                ctrlp.eliminarPunto(nombre1);
            }
            else this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    private void btnAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnadirActionPerformed
        String nombre = JOptionPane.showInputDialog("Introduce el nombre del punto que desea añadir:");
        ArrayList<String> nombres;
        try {
            nombres = ctrlp.getNombresCiudad(ciudad);
            int auxdistancias = (nombres.size()*(nombres.size()-1))/2;
        
            float[] distancias = new float[auxdistancias];
            while(nombres.contains(nombre) || nombre==null || nombre.isEmpty()){
                nombre = JOptionPane.showInputDialog("Introduce un nombre que no esté en la ciudad");
            }
            for (int i = 0; i < auxdistancias; i++) {
                String distanciaEntreNodos = JOptionPane.showInputDialog(String.format("Introduce la distancia entre el punto %s y el punto %s:", "pene", "pene"));
                float auxDistancia = Float.parseFloat(distanciaEntreNodos);
                while(auxDistancia <= 0.0f){
                    distanciaEntreNodos = JOptionPane.showInputDialog(String.format("Introduce una distancia válida:"));
                    auxDistancia = Float.parseFloat(distanciaEntreNodos);
                }
                distancias[i] = auxDistancia;
            }

            ctrlp.anadirPunto(nombre, distancias);
        } catch (IOException ex) {
            Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnadirActionPerformed

    private void btnFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFicheroActionPerformed
        try {
            ctrlp.modificarCiudadFichero(ciudad); 
        } catch (IOException ex) {
            Logger.getLogger(VistaSeleccionCiudad.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaModificarCiudad.class.getName()).log(Level.SEVERE, null, ex);
        }
        String accep = JOptionPane.showInputDialog("Has terminado de guardar la ciudad? si/no:");
        if (accep.equals("si")) {
            ciudadAnadidaFichero();
        }
        else {
            ctrlp.eliminarCiudad(ciudad);
        }
    }//GEN-LAST:event_btnFicheroActionPerformed

    public void ciudadAnadidaFichero() {
        ArrayList<String> nombres = new ArrayList<>();
        ArrayList<ArrayList<Float>> ciudadDist = new ArrayList<>();
        ctrlp.leerMapaFichero(ciudad+"-mapa.txt", ciudad, nombres, ciudadDist);
        try {
            ctrlp.leerCiudad(ciudad);
        } catch (IOException ex) {
            Logger.getLogger(VistaSeleccionCiudad.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaSeleccionCiudad.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ctrlp.pasarAObjeto(ciudad, nombres, ciudadDist);
        } catch (IOException ex) {
            Logger.getLogger(VistaSeleccionCiudad.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaSeleccionCiudad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaModificarCiudad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnadir;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDistancia;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFichero;
    private javax.swing.JButton btnRenombrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    void setCiudad(String ciudad) {
        this.ciudad = ciudad;
    }
}
